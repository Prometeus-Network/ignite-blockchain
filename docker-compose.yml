version: '3.7'
networks:
  kafka-net:
    driver: bridge
services:
#  ignite-api:
#    build:
#      context: .
#      dockerfile: backend.docker
#    dns:
#      - 8.8.8.8
#      - 4.4.4.4
#    env_file:
#      - production.env
#    environment:
#      - NODE_ENV=production
#    networks:
#      - kafka-net
#    ports:
#      - ${API_PORT}:3000
#    depends_on:
#      - ignite-dds-postgres
#      - ingite-dds-main_net
#      - ignite-dds-zookeeper-server
#    volumes:
#      - /app/node_modules
  ignite-dds-zookeeper-server:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    networks:
      - kafka-net
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  ignite-dds-kafka-server1:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '29092:29092'
    networks:
      - kafka-net
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=ignite-dds-zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://ignite-dds-kafka-server1:9092,PLAINTEXT_HOST://localhost:29092
    volumes:
      - kafka-server1-data:/bitnami
    depends_on:
      - ignite-dds-zookeeper-server
  ignite-dds-kafka-server2:
    image: 'bitnami/kafka:latest'
    ports:
      - '9093:9092'
      - '29093:29093'
    networks:
      - kafka-net
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=ignite-dds-zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9093,PLAINTEXT_HOST://:29093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://ignite-dds-kafka-server2:9093,PLAINTEXT_HOST://localhost:29093
    volumes:
      - kafka-server2-data:/bitnami
    depends_on:
      - ignite-dds-zookeeper-server
  ignite-dds-postgres:
    init: true
    image: postgres:12.2-alpine
    volumes:
      - ignite-dds-postgres:/var/lib/postgresql/data
    networks:
      - kafka-net
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - ${POSTGRES_DOCKER_PORT}:5432
  ignite-dds-pgadmin:
    init: true
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - kafka-net
    ports:
      - ${PGADMIN_PORT}:80
    depends_on:
      - ignite-dds-postgres
#  ignite-dds-private-network:
#    build:
#      context: .
#      dockerfile: private_net.docker
#      args:
#        privatekey: ${PRIVATE_NETWORK_ADDRESS_PRIVATE_KEY}
#        address: ${PRIVATE_NET_DEFAULT_ADDRESS}
#        password: ${PRIVATE_NETWORK_ADDRESS_PASSWORD}
#    volumes:
#      - ignite-dds-private-net-storage:/opt/storage
#    ports:
#      - 30307:30307
#      - 7545:7545
#      - 8546:8546
#  ingite-dds-main_net:
#    image: trufflesuite/ganache-cli:latest
#    ports:
#      - "8545:8545"
#    networks:
#      - kafka-net
#    volumes:
#      - ganache_data:/ganache_data
#    entrypoint:
#      - node
#      - /app/ganache-core.docker.cli.js
#      - --networkId
#      - '5555'
#      - -e
#      - '10000'
volumes:
  kafka-server1-data:
  kafka-server2-data:
  ignite-dds-postgres:
#  ganache_data:
#  ignite-dds-private-net-storage:
